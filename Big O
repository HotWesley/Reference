1. Linear : O(N)
선형 검색의 경우 순차적으로 검색하니까, Input 이 N 이면 N번의 스텝을 거치게 됨. --> O(N)
인풋에 상관없이 시간이 동일하면 O(1)
러프하게 이 함수가 어떻게 동작하는지 인풋 사이즈에 따라 결정 됨. 큰 원리에만 관심이 있음.
for n in arr : print(n) --> O(N) 이것도 배열의 한 요소씩 프린트 하는거니까 N에 따라 Step이 증가하는 선형 검색이랑 같잖아

2. Nested Loop : O(N^2)
중첩 for 문과 같은 형태
각 아이템에 대해서 배열을 반복 탐색하니까 .. 10개의 인풋이면 100번의 스텝이 필요하니까 제곱 혈태이다.

3. Binary Search : O(logN)
이진 검색에서 쓰임. 왜냐 각 프로세스의 스텝을 절반으로 나눠서 진행하니까
몇번을 나눠야 하는지가 메인임. 나눌 때마다 TARGET에 다가가는게 Log 함수임
